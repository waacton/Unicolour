namespace Wacton.Unicolour;

using System;

public class Alpha : IEquatable<Alpha>
{
    public double A { get; }
    public int A255 => (int) Math.Round(A * 255);
    public string Hex => $"{A255:X2}";

    public Alpha(double a)
    {
        a.Guard(0.0, 1.0, "Alpha");
        A = a;
    }

    public override string ToString() => $"{A}";

    // --- autogenerated ---
    
    public bool Equals(Alpha? other)
    {
        if (ReferenceEquals(null, other)) return false;
        if (ReferenceEquals(this, other)) return true;
        return A.Equals(other.A);
    }

    public override bool Equals(object? obj)
    {
        if (ReferenceEquals(null, obj)) return false;
        if (ReferenceEquals(this, obj)) return true;
        if (obj.GetType() != this.GetType()) return false;
        return Equals((Alpha) obj);
    }

    public override int GetHashCode()
    {
        return A.GetHashCode();
    }
}